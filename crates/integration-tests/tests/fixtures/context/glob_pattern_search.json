{
  "name": "Context Request with Glob Pattern",
  "description": "Tests requestContext tool with glob patterns to find multiple files",
  "tags": [
    "context",
    "glob",
    "tools"
  ],
  "setup": {
    "files": {
      "src/foo.rs": "pub fn foo() { }",
      "src/bar.rs": "pub fn bar() { }",
      "tests/test_foo.rs": "// test",
      "README.md": "# Project"
    },
    "terminal_size": [
      80,
      24
    ]
  },
  "events": [
    {
      "type": "user_input",
      "data": {
        "text": "Find all Rust source files",
        "submit": true
      }
    },
    {
      "type": "llm_response",
      "trigger": {
        "pattern": "Find all Rust source files",
        "match_type": "contains"
      },
      "response": {
        "typescript": [
          "async function agent_code(): Promise<string> {",
          "  const files = await requestContext('**/*.rs');",
          "  return `Found ${files.length} Rust files`;",
          "}"
        ]
      },
      "verify": {
        "ui": {
          "output_contains": [
            "Found",
            "Rust files"
          ]
        },
        "execution": {}
      }
    },
    {
      "type": "user_input",
      "data": {
        "text": "Find specific file pattern",
        "submit": true
      }
    },
    {
      "type": "llm_response",
      "trigger": {
        "pattern": "specific file pattern",
        "match_type": "contains"
      },
      "response": {
        "typescript": [
          "async function agent_code(): Promise<string> {",
          "  const files = await requestContext('src/*.rs');",
          "  return `Found ${files.length} files in src`;",
          "}"
        ]
      },
      "verify": {
        "ui": {
          "output_contains": [
            "Found",
            "files in src"
          ]
        },
        "execution": {}
      }
    },
    {
      "type": "user_input",
      "data": {
        "text": "Find exact file",
        "submit": true
      }
    },
    {
      "type": "llm_response",
      "trigger": {
        "pattern": "exact file",
        "match_type": "contains"
      },
      "response": {
        "typescript": [
          "async function agent_code(): Promise<string> {",
          "  const files = await requestContext('README.md');",
          "  return `Found README: ${files.length === 1}`;",
          "}"
        ]
      },
      "verify": {
        "ui": {
          "output_contains": [
            "Found README: true"
          ]
        },
        "execution": {}
      }
    }
  ],
  "final_verify": {
    "execution": {}
  }
}
