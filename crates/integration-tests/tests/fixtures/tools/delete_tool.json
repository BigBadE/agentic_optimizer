{
  "name": "Delete Tool Operations",
  "description": "Tests file deletion: successful deletion, nonexistent files, directory rejection",
  "tags": [
    "tools",
    "delete",
    "remove"
  ],
  "setup": {
    "files": {
      "to_delete.txt": "temporary file",
      "keep_this.txt": "permanent file",
      "src/main.rs": "fn main() {}"
    },
    "terminal_size": [
      80,
      24
    ]
  },
  "events": [
    {
      "type": "user_input",
      "data": {
        "text": "Delete to_delete.txt",
        "submit": true
      }
    },
    {
      "type": "llm_response",
      "trigger": {
        "pattern": "Delete to_delete.txt",
        "match_type": "contains"
      },
      "response": {
        "typescript": [
          "async function agent_code(): Promise<string> {",
          "  await deleteFile('to_delete.txt');",
          "  const files = await listFiles('.');",
          "  return `Deleted file. Remaining: ${files.join(', ')}`;",
          "}"
        ]
      },
      "verify": {
        "files": [
          {
            "path": "to_delete.txt",
            "exists": false
          },
          {
            "path": "keep_this.txt",
            "exists": true
          }
        ],
        "execution": {}
      }
    },
    {
      "type": "user_input",
      "data": {
        "text": "Try to delete nonexistent file",
        "submit": true
      }
    },
    {
      "type": "llm_response",
      "trigger": {
        "pattern": "delete nonexistent",
        "match_type": "contains"
      },
      "response": {
        "typescript": [
          "async function agent_code(): Promise<string> {",
          "  try {",
          "    await deleteFile('nonexistent.txt');",
          "    return 'Unexpectedly succeeded';",
          "  } catch (error) {",
          "    return `Expected error: Cannot delete nonexistent file`;",
          "  }",
          "}"
        ]
      },
      "verify": {
        "execution": {}
      }
    },
    {
      "type": "user_input",
      "data": {
        "text": "Try to delete the src directory",
        "submit": true
      }
    },
    {
      "type": "llm_response",
      "trigger": {
        "pattern": "delete the src directory",
        "match_type": "contains"
      },
      "response": {
        "typescript": [
          "async function agent_code(): Promise<string> {",
          "  try {",
          "    await deleteFile('src');",
          "    return 'Unexpectedly succeeded';",
          "  } catch (error) {",
          "    return `Expected error: Cannot delete directory`;",
          "  }",
          "}"
        ]
      },
      "verify": {
        "files": [
          {
            "path": "src/main.rs",
            "exists": true
          }
        ],
        "execution": {}
      }
    }
  ],
  "final_verify": {
    "execution": {},
    "files": [
      {
        "path": "to_delete.txt",
        "exists": false
      },
      {
        "path": "keep_this.txt",
        "exists": true
      },
      {
        "path": "src/main.rs",
        "exists": true
      }
    ]
  }
}
