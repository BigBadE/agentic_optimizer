name: Coverage Report

on:
  push:
    branches: [ master ]
    paths:
      - 'benchmarks/data/coverage/latest.info'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  deployments: write
  pull-requests: write

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0

jobs:
  upload-coverage:
    name: Upload Coverage Results
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-results
          path: benchmarks/data/coverage/latest.info
          retention-days: 90

      - name: Upload coverage to Codecov
        if: github.event_name == 'push' && github.ref == 'refs/heads/master' && hashFiles('benchmarks/data/coverage/latest.info') != ''
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./benchmarks/data/coverage/latest.info
          verbose: true
          fail_ci_if_error: false

      - name: Prepare gh-pages workspace
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages
          fetch-depth: 0

      - name: Publish coverage results to gh-pages
        if: github.event_name == 'push' && github.ref == 'refs/heads/master' && hashFiles('benchmarks/data/coverage/latest.info') != ''
        run: |
          set -e
          ts=$(date +%Y-%m-%d-%H-%M-%S)

          # Switch to gh-pages branch
          cd gh-pages

          # Create directories
          mkdir -p data/coverage

          # Copy pre-generated coverage data from committed file
          if [ -f ../benchmarks/data/coverage/latest.info ]; then
            cp ../benchmarks/data/coverage/latest.info data/coverage/latest.info
            # Also save timestamped version for history
            cp ../benchmarks/data/coverage/latest.info "data/coverage/${ts}.info"
          fi

          # Commit and push
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git add data/ || true
          git commit -m "Update coverage results: ${ts}" || echo "No changes to commit"
          git pull --rebase origin gh-pages || true
          git push origin gh-pages

      # Don't remove benchmarks/data/coverage/latest.info - keep it for history and re-runs
