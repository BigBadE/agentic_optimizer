{
  "name": "context_keyword_match_inclusion",
  "description": "Test that files matching query keywords ARE included via BM25 search",
  "tags": [
    "context",
    "positive",
    "keyword"
  ],
  "setup": {
    "files": {
      "src/payment_processor.rs": "use stripe::PaymentIntent;\n\npub struct PaymentProcessor {\n    api_key: String,\n}\n\nimpl PaymentProcessor {\n    pub async fn process_payment(&self, amount: u64) -> Result<String> {\n        let payment = PaymentIntent::create(amount, \"usd\").await?;\n        Ok(payment.id)\n    }\n}",
      "src/invoice.rs": "pub struct Invoice {\n    pub id: String,\n    pub total: u64,\n}\n\nimpl Invoice {\n    pub fn calculate_total(&self) -> u64 {\n        self.total\n    }\n}",
      "src/user_profile.rs": "pub struct UserProfile {\n    pub email: String,\n    pub name: String,\n}"
    }
  },
  "events": [
    {
      "type": "user_input",
      "data": {
        "text": "Find code related to payment processing",
        "submit": true
      }
    },
    {
      "type": "llm_response",
      "trigger": {
        "pattern": "payment",
        "match_type": "contains"
      },
      "response": {
        "typescript": [
          "async function agent_code(): Promise<string> {",
          "  // Should find payment_processor.rs due to keyword match",
          "  return 'Found payment processing in src/payment_processor.rs';",
          "}"
        ]
      },
      "verify": {
        "execution": {
          "return_type": "string"
        },
        "ui": {
          "output_contains": [
            "payment"
          ]
        }
      }
    }
  ],
  "final_verify": {
    "execution": {},
    "ui": {
      "all_tasks_completed": true
    }
  }
}
