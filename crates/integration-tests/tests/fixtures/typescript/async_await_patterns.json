{
  "name": "Async/Await Patterns and Error Handling",
  "description": "Tests various async/await patterns including error handling",
  "tags": [
    "typescript",
    "async",
    "await",
    "patterns"
  ],
  "setup": {
    "files": {
      "async1.txt": "Data 1",
      "async2.txt": "Data 2"
    },
    "terminal_size": [
      80,
      24
    ]
  },
  "events": [
    {
      "type": "user_input",
      "data": {
        "text": "Test async patterns",
        "submit": true
      }
    },
    {
      "type": "llm_response",
      "trigger": {
        "pattern": "async patterns",
        "match_type": "contains"
      },
      "response": {
        "typescript": [
          "async function agent_code(): Promise<string> {",
          "  const sequential = async () => {",
          "    const d1 = await readFile('async1.txt');",
          "    const d2 = await readFile('async2.txt');",
          "    return `${d1}, ${d2}`;",
          "  };",
          "  const parallel = async () => {",
          "    const [p1, p2] = await Promise.all([",
          "      readFile('async1.txt'),",
          "      readFile('async2.txt')",
          "    ]);",
          "    return `${p1}, ${p2}`;",
          "  };",
          "  const seq = await sequential();",
          "  const par = await parallel();",
          "  return `Sequential: ${seq} | Parallel: ${par}`;",
          "}"
        ]
      },
      "verify": {
        "ui": {
          "tasks_displayed": 1,
          "output_contains": [
            "Sequential:",
            "Parallel:",
            "Data 1",
            "Data 2"
          ]
        },
        "execution": {}
      }
    }
  ],
  "final_verify": {
    "execution": {}
  }
}
