{
  "name": "Bash Tool Error Handling with Try/Catch",
  "description": "Tests that bash command failures can be caught with try/catch in TypeScript",
  "tags": [
    "tools",
    "bash",
    "error-handling"
  ],
  "setup": {
    "files": {},
    "terminal_size": [
      80,
      24
    ]
  },
  "events": [
    {
      "type": "user_input",
      "data": {
        "text": "Test bash error handling",
        "submit": true
      }
    },
    {
      "type": "llm_response",
      "trigger": {
        "pattern": "Test",
        "match_type": "contains"
      },
      "response": {
        "typescript": [
          "async function agent_code(): Promise<string> {",
          "  const result = await bash('exit 42');",
          "  if (result.exit_code !== 0) {",
          "    return `Command failed as expected with exit code ${result.exit_code}`;",
          "  }",
          "  return `Unexpected success: ${JSON.stringify(result)}`;",
          "}"
        ]
      },
      "verify": {
        "ui": {
          "tasks_displayed": 1,
          "output_contains": [
            "Command failed as expected",
            "exit code 42"
          ]
        },
        "execution": {}
      }
    }
  ],
  "final_verify": {
    "execution": {},
    "ui": {
      "all_tasks_completed": true
    }
  }
}
