{
  "name": "Task Decision Making Scenarios",
  "description": "Tests different types of task decisions: Complete, GatherContext, and decision history tracking",
  "tags": [
    "executor",
    "self_determining",
    "task_decision",
    "decision_history"
  ],
  "setup": {
    "files": {
      "test_context.txt": "Initial context for gathering"
    },
    "terminal_size": [
      80,
      24
    ]
  },
  "events": [
    {
      "type": "user_input",
      "data": {
        "text": "Complete a simple task",
        "submit": true
      }
    },
    {
      "type": "llm_response",
      "trigger": {
        "pattern": "Complete a simple task",
        "match_type": "contains"
      },
      "response": {
        "typescript": [
          "async function agent_code(): Promise<string> {",
          "  // TaskAction::Complete scenario",
          "  return 'Task completed successfully';",
          "}"
        ]
      },
      "verify": {
        "execution": {
          "return_type": "string"
        }
      }
    },
    {
      "type": "user_input",
      "data": {
        "text": "Gather context from test_context.txt",
        "submit": true
      }
    },
    {
      "type": "llm_response",
      "trigger": {
        "pattern": "Gather context",
        "match_type": "contains"
      },
      "response": {
        "typescript": [
          "async function agent_code(): Promise<string> {",
          "  // TaskAction::GatherContext scenario",
          "  const context = await readFile('test_context.txt');",
          "  return `Gathered context: ${context}`;",
          "}"
        ]
      },
      "verify": {
        "execution": {
          "return_value_matches": "Gathered context: Initial context for gathering"
        }
      }
    },
    {
      "type": "user_input",
      "data": {
        "text": "Make multiple decisions in sequence",
        "submit": true
      }
    },
    {
      "type": "llm_response",
      "trigger": {
        "pattern": "multiple decisions",
        "match_type": "contains"
      },
      "response": {
        "typescript": [
          "async function agent_code(): Promise<string> {",
          "  // First decision: gather context",
          "  const ctx = await readFile('test_context.txt');",
          "  // Second decision: process",
          "  const processed = ctx.toUpperCase();",
          "  await writeFile('decision_output.txt', processed);",
          "  // Final decision: complete",
          "  return 'Multiple decisions completed';",
          "}"
        ]
      },
      "verify": {
        "files": [
          {
            "path": "decision_output.txt",
            "exists": true,
            "contains": [
              "INITIAL CONTEXT FOR GATHERING"
            ]
          }
        ],
        "execution": {}
      }
    }
  ],
  "final_verify": {
    "execution": {},
    "files": [
      {
        "path": "test_context.txt",
        "exists": true,
        "contains": [
          "Initial context for gathering"
        ]
      },
      {
        "path": "decision_output.txt",
        "exists": true,
        "contains": [
          "INITIAL CONTEXT FOR GATHERING"
        ]
      }
    ]
  }
}
