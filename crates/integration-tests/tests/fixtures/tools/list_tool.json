{
  "name": "List Tool Operations",
  "description": "Tests directory listing: contents, subdirectories, hidden files, error cases",
  "tags": [
    "tools",
    "list",
    "directory"
  ],
  "setup": {
    "files": {
      "src/main.rs": "fn main() {}",
      "src/lib.rs": "pub fn add() {}",
      "src/utils/helper.rs": "pub fn help() {}",
      ".hidden": "secret content",
      "visible.txt": "visible content"
    },
    "terminal_size": [
      80,
      24
    ]
  },
  "events": [
    {
      "type": "user_input",
      "data": {
        "text": "List files in src directory",
        "submit": true
      }
    },
    {
      "type": "llm_response",
      "trigger": {
        "pattern": "List files in src",
        "match_type": "contains"
      },
      "response": {
        "typescript": [
          "async function agent_code(): Promise<string> {",
          "  const files = await listFiles('src');",
          "  return `Files in src: ${files.join(', ')}`;",
          "}"
        ]
      },
      "verify": {
        "execution": {
          "typescript_executed": true,
          "tools_called": [
            "listFiles"
          ]
        }
      }
    },
    {
      "type": "user_input",
      "data": {
        "text": "Check for subdirectories in src",
        "submit": true
      }
    },
    {
      "type": "llm_response",
      "trigger": {
        "pattern": "subdirectories in src",
        "match_type": "contains"
      },
      "response": {
        "typescript": [
          "async function agent_code(): Promise<string> {",
          "  const files = await listFiles('src');",
          "  const hasSubdir = files.includes('utils');",
          "  return hasSubdir ? 'Found utils subdirectory' : 'No subdirectories';",
          "}"
        ]
      },
      "verify": {
        "execution": {
          "typescript_executed": true,
          "tools_called": [
            "listFiles"
          ]
        }
      }
    },
    {
      "type": "user_input",
      "data": {
        "text": "List root without hidden files",
        "submit": true
      }
    },
    {
      "type": "llm_response",
      "trigger": {
        "pattern": "without hidden",
        "match_type": "contains"
      },
      "response": {
        "typescript": [
          "async function agent_code(): Promise<string> {",
          "  const files = await listFiles('.', { include_hidden: false });",
          "  const hasHidden = files.some(f => f.startsWith('.'));",
          "  return hasHidden ? 'Hidden files found' : `No hidden files: ${files.join(', ')}`;",
          "}"
        ]
      },
      "verify": {
        "execution": {
          "typescript_executed": true,
          "tools_called": [
            "listFiles"
          ]
        }
      }
    },
    {
      "type": "user_input",
      "data": {
        "text": "List root WITH hidden files",
        "submit": true
      }
    },
    {
      "type": "llm_response",
      "trigger": {
        "pattern": "WITH hidden",
        "match_type": "contains"
      },
      "response": {
        "typescript": [
          "async function agent_code(): Promise<string> {",
          "  const files = await listFiles('.', { include_hidden: true });",
          "  const hasHidden = files.some(f => f === '.hidden');",
          "  return hasHidden ? 'Found .hidden file' : 'No hidden files found';",
          "}"
        ]
      },
      "verify": {
        "execution": {
          "typescript_executed": true,
          "tools_called": [
            "listFiles"
          ]
        }
      }
    },
    {
      "type": "user_input",
      "data": {
        "text": "Try to list nonexistent directory",
        "submit": true
      }
    },
    {
      "type": "llm_response",
      "trigger": {
        "pattern": "list nonexistent",
        "match_type": "contains"
      },
      "response": {
        "typescript": [
          "async function agent_code(): Promise<string> {",
          "  try {",
          "    await listFiles('nonexistent_dir');",
          "    return 'Unexpectedly succeeded';",
          "  } catch (error) {",
          "    return `Expected error: Directory not found`;",
          "  }",
          "}"
        ]
      },
      "verify": {
        "execution": {
          "typescript_executed": true,
          "tools_called": [
            "listFiles"
          ]
        }
      }
    },
    {
      "type": "user_input",
      "data": {
        "text": "Try to list a file instead of directory",
        "submit": true
      }
    },
    {
      "type": "llm_response",
      "trigger": {
        "pattern": "list a file",
        "match_type": "contains"
      },
      "response": {
        "typescript": [
          "async function agent_code(): Promise<string> {",
          "  try {",
          "    await listFiles('src/main.rs');",
          "    return 'Unexpectedly succeeded';",
          "  } catch (error) {",
          "    return `Expected error: Not a directory`;",
          "  }",
          "}"
        ]
      },
      "verify": {
        "execution": {
          "typescript_executed": true,
          "tools_called": [
            "listFiles"
          ]
        }
      }
    }
  ],
  "final_verify": {
    "execution": {
      "all_tasks_completed": true
    },
    "files": [
      {
        "path": "src/main.rs",
        "exists": true
      },
      {
        "path": "src/utils/helper.rs",
        "exists": true
      },
      {
        "path": ".hidden",
        "exists": true
      }
    ]
  }
}
