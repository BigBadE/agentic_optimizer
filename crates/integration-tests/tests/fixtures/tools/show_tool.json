{
  "name": "Show Tool Operations",
  "description": "Tests file reading with various scenarios: full file, line ranges, nonexistent files",
  "tags": [
    "tools",
    "show",
    "read"
  ],
  "setup": {
    "files": {
      "src/main.rs": "fn main() {\n    println!(\"Hello\");\n}\n",
      "src/lib.rs": "pub fn add(a: i32, b: i32) -> i32 {\n    a + b\n}\n",
      "unicode.txt": "Hello ‰∏ñÁïå üåç\nRust ü¶Ä is great!\n"
    },
    "terminal_size": [
      80,
      24
    ]
  },
  "events": [
    {
      "type": "user_input",
      "data": {
        "text": "Show me the main.rs file",
        "submit": true
      }
    },
    {
      "type": "llm_response",
      "trigger": {
        "pattern": "Show me the main.rs",
        "match_type": "contains"
      },
      "response": {
        "typescript": [
          "async function agent_code(): Promise<string> {",
          "  const content = await readFile('src/main.rs');",
          "  return `File contents:\\n${content}`;",
          "}"
        ]
      },
      "verify": {
        "ui": {
          "output_contains": [
            "File contents",
            "fn main()",
            "println"
          ]
        },
        "execution": {}
      }
    },
    {
      "type": "user_input",
      "data": {
        "text": "Show me lines 1-2 of main.rs",
        "submit": true
      }
    },
    {
      "type": "llm_response",
      "trigger": {
        "pattern": "lines 1-2",
        "match_type": "contains"
      },
      "response": {
        "typescript": [
          "async function agent_code(): Promise<string> {",
          "  const content = await readFile('src/main.rs', { start_line: 1, end_line: 2 });",
          "  return `Lines 1-2:\\n${content}`;",
          "}"
        ]
      },
      "verify": {
        "execution": {}
      }
    },
    {
      "type": "user_input",
      "data": {
        "text": "Read unicode.txt",
        "submit": true
      }
    },
    {
      "type": "llm_response",
      "trigger": {
        "pattern": "Read unicode.txt",
        "match_type": "contains"
      },
      "response": {
        "typescript": [
          "async function agent_code(): Promise<string> {",
          "  const content = await readFile('unicode.txt');",
          "  return `Unicode content: ${content}`;",
          "}"
        ]
      },
      "verify": {
        "execution": {}
      }
    },
    {
      "type": "user_input",
      "data": {
        "text": "Try to read nonexistent.rs",
        "submit": true
      }
    },
    {
      "type": "llm_response",
      "trigger": {
        "pattern": "read nonexistent.rs",
        "match_type": "contains"
      },
      "response": {
        "typescript": [
          "async function agent_code(): Promise<string> {",
          "  try {",
          "    const content = await readFile('nonexistent.rs');",
          "    return `Content: ${content}`;",
          "  } catch (error) {",
          "    return `Error: File not found`;",
          "  }",
          "}"
        ]
      },
      "verify": {
        "execution": {}
      }
    }
  ],
  "final_verify": {
    "execution": {
      "all_tasks_completed": true
    },
    "files": [
      {
        "path": "src/main.rs",
        "exists": true
      },
      {
        "path": "unicode.txt",
        "exists": true
      }
    ]
  }
}