name: Performance Benchmarks

on:
  push:
    branches: [ master ]
    paths:
      - 'benchmarks/data/criterion/latest.json'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  deployments: write
  pull-requests: write

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0

jobs:
  performance-benchmark:
    name: Run Performance Benchmarks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for criterion results
        id: check_results
        run: |
          if [ ! -f benchmarks/data/criterion/latest.json ]; then
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "⚠️ No benchmarks/data/criterion/latest.json found. Run benchmarks locally first:"
            echo "  bash scripts/benchmark.sh"
            exit 1
          else
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "✅ Found benchmarks/data/criterion/latest.json"
            head -20 benchmarks/data/criterion/latest.json
          fi

      - name: Upload results artifact
        uses: actions/upload-artifact@v4
        with:
          name: criterion-benchmark-results
          path: benchmarks/data/criterion/latest.json
          retention-days: 90

      - name: Prepare gh-pages workspace
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages
          fetch-depth: 0

      - name: Publish performance results to gh-pages
        if: github.event_name == 'push' && github.ref == 'refs/heads/master' && hashFiles('benchmarks/data/criterion/latest.json') != ''
        run: |
          set -e
          ts=$(date +%Y-%m-%d-%H-%M-%S)

          # Switch to gh-pages branch
          cd gh-pages

          # Create directories
          mkdir -p data/criterion

          # Copy pre-generated JSON data from committed file
          if [ -f ../benchmarks/data/criterion/latest.json ]; then
            cp ../benchmarks/data/criterion/latest.json data/criterion/
            # Also save timestamped version for history
            cp ../benchmarks/data/criterion/latest.json "data/criterion/${ts}.json"
          fi

          # Generate dashboard if it doesn't exist
          if [ ! -f index.html ]; then
            cd ..
            bash scripts/generate-benchmark-dashboard.sh /tmp/dashboard-temp
            cd gh-pages
            cp /tmp/dashboard-temp/index.html .
            cp -r /tmp/dashboard-temp/assets .
          fi

          # Commit and push
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git add data/ index.html assets/ || true
          git commit -m "Update performance benchmark results: ${ts}" || echo "No changes to commit"
          git pull --rebase origin gh-pages || true
          git push origin gh-pages

      # Don't remove benchmarks/data/criterion/latest.json - keep it for history and re-runs
