{
  "name": "Conversation Context Management",
  "description": "Tests building and using conversation history for context-aware responses",
  "tags": [
    "agent",
    "conversation",
    "context"
  ],
  "setup": {
    "files": {},
    "terminal_size": [
      80,
      24
    ]
  },
  "events": [
    {
      "type": "user_input",
      "data": {
        "text": "What is 2+2?",
        "submit": true
      }
    },
    {
      "type": "llm_response",
      "trigger": {
        "pattern": "What is 2\\+2",
        "match_type": "regex"
      },
      "response": {
        "typescript": [
          "async function agent_code(): Promise<string> {",
          "  return '4';",
          "}"
        ]
      },
      "verify": {
        "execution": {}
      }
    },
    {
      "type": "user_input",
      "data": {
        "text": "What about 3+3?",
        "submit": true
      }
    },
    {
      "type": "llm_response",
      "trigger": {
        "pattern": "What about 3\\+3",
        "match_type": "regex"
      },
      "response": {
        "typescript": [
          "async function agent_code(): Promise<string> {",
          "  return '6';",
          "}"
        ]
      },
      "verify": {
        "execution": {}
      }
    },
    {
      "type": "user_input",
      "data": {
        "text": "Continue the math pattern",
        "submit": true
      }
    },
    {
      "type": "llm_response",
      "trigger": {
        "pattern": "Continue the math pattern",
        "match_type": "contains"
      },
      "response": {
        "typescript": [
          "async function agent_code(): Promise<string> {",
          "  return 'Following the pattern: 4+4=8, 5+5=10';",
          "}"
        ]
      },
      "verify": {
        "execution": {}
      }
    }
  ],
  "final_verify": {
    "execution": {
      "all_tasks_completed": true
    }
  }
}