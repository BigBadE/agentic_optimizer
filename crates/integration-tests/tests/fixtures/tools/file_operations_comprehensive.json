{
  "name": "File Operations Comprehensive",
  "description": "Tests write, read, list, delete operations in sequence",
  "tags": [
    "tools",
    "file-operations",
    "comprehensive"
  ],
  "setup": {
    "files": {
      "existing.txt": "existing content"
    },
    "terminal_size": [
      80,
      24
    ]
  },
  "events": [
    {
      "type": "user_input",
      "data": {
        "text": "Create nested directory structure",
        "submit": true
      }
    },
    {
      "type": "llm_response",
      "trigger": {
        "pattern": "nested directory",
        "match_type": "contains"
      },
      "response": {
        "typescript": [
          "async function agent_code(): Promise<string> {",
          "  await writeFile('deeply/nested/path/file.txt', 'nested content');",
          "  const content = await readFile('deeply/nested/path/file.txt');",
          "  return `Created nested file with: ${content}`;",
          "}"
        ]
      },
      "verify": {
        "files": [
          {
            "path": "deeply/nested/path/file.txt",
            "exists": true,
            "contains": [
              "nested content"
            ]
          }
        ],
        "execution": {}
      }
    },
    {
      "type": "user_input",
      "data": {
        "text": "List all files",
        "submit": true
      }
    },
    {
      "type": "llm_response",
      "trigger": {
        "pattern": "List all files",
        "match_type": "contains"
      },
      "response": {
        "typescript": [
          "async function agent_code(): Promise<string> {",
          "  const files = await listFiles('.');",
          "  return `Found ${files.length} files total`;",
          "}"
        ]
      },
      "verify": {
        "ui": {
          "output_contains": [
            "Found",
            "files total"
          ]
        },
        "execution": {}
      }
    },
    {
      "type": "user_input",
      "data": {
        "text": "Overwrite existing file",
        "submit": true
      }
    },
    {
      "type": "llm_response",
      "trigger": {
        "pattern": "Overwrite existing",
        "match_type": "contains"
      },
      "response": {
        "typescript": [
          "async function agent_code(): Promise<string> {",
          "  await writeFile('existing.txt', 'new content');",
          "  const content = await readFile('existing.txt');",
          "  return `File now contains: ${content}`;",
          "}"
        ]
      },
      "verify": {
        "files": [
          {
            "path": "existing.txt",
            "exists": true,
            "contains": [
              "new content"
            ]
          }
        ],
        "execution": {}
      }
    },
    {
      "type": "user_input",
      "data": {
        "text": "Delete created files",
        "submit": true
      }
    },
    {
      "type": "llm_response",
      "trigger": {
        "pattern": "Delete created",
        "match_type": "contains"
      },
      "response": {
        "typescript": [
          "async function agent_code(): Promise<string> {",
          "  await deleteFile('deeply/nested/path/file.txt');",
          "  return 'Deleted nested file';",
          "}"
        ]
      },
      "verify": {
        "execution": {}
      }
    }
  ],
  "final_verify": {
    "files": [
      {
        "path": "existing.txt",
        "exists": true,
        "contains": [
          "new content"
        ]
      }
    ],
    "execution": {}
  }
}
