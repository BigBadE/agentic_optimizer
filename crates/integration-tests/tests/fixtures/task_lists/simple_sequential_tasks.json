{
  "name": "Simple Sequential Tasks",
  "description": "Basic task list with sequential steps to exercise decomposition logic",
  "tags": ["task_lists", "decomposition", "sequential"],
  "setup": {
    "files": {},
    "terminal_size": [120, 40]
  },
  "events": [
    {
      "type": "user_input",
      "data": {
        "text": "Create a simple Rust project with main and lib",
        "submit": true
      }
    },
    {
      "type": "llm_response",
      "trigger": {
        "pattern": "Create a simple Rust project",
        "match_type": "contains"
      },
      "response": {
        "typescript": [
          "async function agent_code() {",
          "  return {",
          "    title: 'Setup Rust Project',",
          "    steps: [",
          "      {",
          "        title: 'Create main.rs',",
          "        description: 'Create src/main.rs with hello world',",
          "        step_type: 'implementation'",
          "      },",
          "      {",
          "        title: 'Create lib.rs',",
          "        description: 'Create src/lib.rs with basic function',",
          "        step_type: 'implementation'",
          "      },",
          "      {",
          "        title: 'Create Cargo.toml',",
          "        description: 'Create Cargo.toml manifest',",
          "        step_type: 'implementation'",
          "      }",
          "    ]",
          "  };",
          "}"
        ]
      },
      "verify": {
        "execution": {}
      }
    },
    {
      "type": "llm_response",
      "trigger": {
        "pattern": "Create src/main.rs with hello world",
        "match_type": "contains"
      },
      "response": {
        "typescript": [
          "async function agent_code(): Promise<string> {",
          "  await writeFile('src/main.rs', 'fn main() {\\n    println!(\"Hello, world!\");\\n}');",
          "  return 'Created src/main.rs';",
          "}"
        ]
      },
      "verify": {
        "files": [
          {
            "path": "src/main.rs",
            "exists": true,
            "contains": ["fn main", "println!"]
          }
        ]
      }
    },
    {
      "type": "llm_response",
      "trigger": {
        "pattern": "Create src/lib.rs with basic function",
        "match_type": "contains"
      },
      "response": {
        "typescript": [
          "async function agent_code(): Promise<string> {",
          "  await writeFile('src/lib.rs', 'pub fn add(a: i32, b: i32) -> i32 {\\n    a + b\\n}');",
          "  return 'Created src/lib.rs';",
          "}"
        ]
      },
      "verify": {
        "files": [
          {
            "path": "src/lib.rs",
            "exists": true,
            "contains": ["pub fn add"]
          }
        ]
      }
    },
    {
      "type": "llm_response",
      "trigger": {
        "pattern": "Create Cargo.toml manifest",
        "match_type": "contains"
      },
      "response": {
        "typescript": [
          "async function agent_code(): Promise<string> {",
          "  const manifest = '[package]\\nname = \"test-project\"\\nversion = \"0.1.0\"\\nedition = \"2021\"';",
          "  await writeFile('Cargo.toml', manifest);",
          "  return 'Created Cargo.toml';",
          "}"
        ]
      },
      "verify": {
        "files": [
          {
            "path": "Cargo.toml",
            "exists": true,
            "contains": ["[package]", "name ="]
          }
        ]
      }
    }
  ],
  "final_verify": {
    "files": [
      {
        "path": "src/main.rs",
        "exists": true
      },
      {
        "path": "src/lib.rs",
        "exists": true
      },
      {
        "path": "Cargo.toml",
        "exists": true
      }
    ]
  }
}
